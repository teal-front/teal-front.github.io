1.seajs的CMD规范，factory函数形参
define(function (require, exports, module) {
  //not: require, module, exports
});
2.DOM attribute不区别大小写？
When called on an HTML element in a DOM flagged as an HTML document, getAttribute() lower-cases its argument before proceeding.
https://developer.mozilla.org/en-US/docs/Web/API/Element.getAttribute
3.jquery  next("span")  只能找到下一个，参数无效。得使用siblings.
4.oInput.blur()不能冒泡，触发不了jQuery用on绑定的事件。用jQuery的trigger("blur")就可以。
5.form表单的提交，
<input name='attr' type='checkbox' value="v1">
<input name='attr' type='checkbox' value="v2">
form data: attr=v1&attr=v2
php: $_POST['attr'] = v2 (not v1v2)。
如果name="attr[]",则
php:$_POST['attr']=("v1","v2");
6.typeof x =>"undefined" (x未定义)
7.ele.onclick = function (e)　{
　　return false;  //will prevent default action,
   but can't stop propagation
}

PS:
1. 路径选择工具，删掉多余的图形。

1.14
1.jQuery proir v1.6的$().attr("checked", false) 的错误包容。
2.ele.getAttribute("value")的初始值的attr原始保留。
3.tpyeof a === "undefined",要加引号
4.同一对象绑定多个Click事件，只要其中一个事件里写return false;就可以阻止冒泡了。
5.<body onload="func();">
等同于window.onload，会彼此覆盖，后一个覆盖前一个。
6.window.open("http://", "newwindow");可打开新窗口，但是得用在用户手动触发的事件里才行，像放在window.onload里就不行，element.onmouseover这种事件也不行。目前可行的有onclick事件。（如果window.open放在点击事件的异步回调函数里，那么也将无效，可将异步改为同步）
7.~~3.14 => 3  相当于parseInt、Math.floor
 ~“a".indexOf("a")  => ~-1 === 0
8.EcmaScript 5中的
Array.prototype.some&Array.prototype.every都可以中断Loop，但Array.prototype.forEach不行。
some跟every中断条件相反，every是最先返回false，some是最先返回true
9.uncaught expecptions不包含try catch里的错误，包含throw new Error()
输出throw new Error()会中断程序，就像真的出错一样
10.Function.prototype.apply(thisArg, Arr);其中Arr可以是一个arguments对象。
11.玉伯出品的es5-safe.js里
 len = this.length >>> 0等价于
this.length || 0
undefined >>> 0 => 0
null >>> 0 => 0
[] >>> 0 => 0
12.html5的HTMLElement.dataset在html标签中不能包含大写字母。应 data-date-of-birth=“2012-25-25”。JS:
el.dataset.dateOfBirth
(https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.dataset)

13.functions = (callbacks =  [function () {}, function (){}]).slice(0);
实现对callbacks的引用，浅复制

14.RegExp "pathname".replace(/^/, "/");  => "/pathname"
14.1 RegExp new RegExp("\\b" + className + "\\b");    里面的\b要用两个\\来表示
15.new RegExp(//).test("asdf")   => true   空的正则总是匹配为true
  Regexp.prototype.exec VS String.prototype.match 
  前者不支持g（全局匹配），后者支持。都是返回一个数组，或是null。
  如果不带有g，则返回的数组有两个额外的属性，input & index，
	  input表示操作的字符串。index表示string.indexOf(arr[0] )的值。
不带g，则没有两个额外的属性。此时，match方法只匹配全部，不匹配括号里的，如
  ".a.b".match(/\.([\w-]+)/g) //=>[".a", ".b"]，而不是["a", "b"]
16.jQuery插件开发： 
  $.fn.yw = function () {
	this; => jQuery对象,比如$("div")
	return this.each(function () {		
      });
};
17.IE6-7 Bug
window.x = "a";
delete window.x; 会出错
try{delete window.x;} catch(e) {window.x = undefined;}
18.window.innerWidth: 获取窗口宽度，不过此属性包含页面滚动条的宽度。
这个属性只有高级浏览器才支持，一般用document.documentElement.clientWidth。

19.var p = {
   w: 1,
   h: 2,
   l: p.w + p.h
}    TypeError: Cannot read property 'w' of undefined
20.eval（str)    // wrong 
    eval("(" + str + ")")  //right
21.$().trigger("eventType", [arguments[0], arguments[1]]);
22.HTMLElement.style.removeAttribute("borderTopWidth")   // IE6-8    (camelString)
   而且像一些缩写属性，IE会展开，比如background-position => backgroundPositionX + backgroundPositionY
  HTMLElement.style.removeProperty("border-top-width") //IE9+ 、Chrome、Firefox
23.正则中的*: 0个或多个。 +： 一个或多个  
  \w: [A-Za-z0-9_]
/adnb/m  符号m表示多行查找，即忽略换行符
24.jQuery-> $.ajax( {
  complete: function(jqXHR) {}, //请求结束时触发，第一个参数为jqXHR对象
 fail:　function (jqXHR) {}, //请求失败时触发，第一个参数为jqXHR对象
 success: function (data) {} //请求成功时触发，第一个参数为返回的对象
});

25.jQuery中对$(child).offsetParent()的处理，IE8-9不能正确地处理隐藏的offsetParent元素，会忽略它。
还有隐藏元素的宽度

26.document.nodeType => 1
     document.nodeName => "#document"
     document.style.display => wrong, document has no 'style' property, is 'undefined'
     window.getComputedStyle(document, null) => wrong , 同上
27.document.all => IE6-9, except IE10
28. var newwindow = window.open("http://cope.jquery.com/", "newwindow");
	if (newwindow.focus) { newwindow.focus() }
   window.onfocus = function () {
      alert("window onfocus.");
   };
29.window.onmessage 与Iframe页面通信 IE8+
30. "bar" in "foo" VS !!foo.bar
     IE9: !!window.external.addFavorite => false   
            "addFavorite" in window.external => true
	     typeof window.external.addFavorite => "unknown" JScript v8新增的类型
    所以还是"bar" in "foo"保险些。
31. Number.prototype.toFixed(interal)
     20 .toFixed(2) // => '20.00'
     20.0.toFixed(2) // => '20.00'
  Number.prototype.toPrecision(precision);
   2343.34 .toPrecision(5) // => '2343.3'
32.form表单中disabled的元素不会被提交
34.util.isObject = function(val) {     //是否为对象
    return val === Object(val)
  }
35.$.grep([1,3,4], function (c,i) {
	return c % 2 == 0;
}); => [4]
p.s. 1.第二个函数里面不支持this.
        2.同$.each，如果是jQuery对象，则传进去的为DOM对象。
        3.不同于$.each，如果是jQuery对象，最终返回的是Dom数组。
36.Element.getBoundingClientRect（）
  IE9+、Chrome返回object ClienRect对象，属性为width height top left bottom right
 IE6-8 返回object对象，属性为top left right bottom，比上面的少了width跟height
  都可作用于内联元素。
37.new Image().complete => true;    //好奇葩
38.isNaN({}) // => true   但是{}并不是NaN，因为中间有隐式类型转换
    typeof x === "number" && isNaN(x) 或者是
    x != x  
39.Node.children vs Node.childNodes
   Node.children只包含Element元素；
   Node.childNodes包含Element元素跟文本节点。
 The children collection also contains the child comment nodes in Internet Explorer before version 9（commentNode.nodeType = 8）
40.正则，字符半角: /[\x00-\xff]/.test("k")  => true
41. IE6-8下，document.getElementsByTagName("*")返回的是com对象集合，转换为数组不能用
  [].slice.call(alikeArray, 0);  ,下面是解决方案：
	          var i = 0, l = alikeArray.length;
       	    var array = [];
                for (; i < l; i++) {
                    array.push(alikeArray[i])  or
				 fn(alikeArray[i])  //直接使用
                }

43.IE8 elem.style.width = "-4px" //=> throw error, 参数无效
44.点开input:file，使弹出选择文件框，此时直接关闭弹出窗口，若input:file有值，就会触发onchange事件，若没有值，就不会触发。
45.Object.prototype.toString.call([]) =>
 object Array no!!!!!!!
   [object Array]    yes..
46. [].unshift(2) => [2] ...no!!!!!!!
      返回新数组的个数。
47.type.length，type可能是什么，可能是string呀！
48.if("0") alert(0);   会执行
Boolean("0") => true
  "0" == true => false  
  为什么呢？
因为对于字符串，只有“”是false的，
"0"==true时，true会转换为"true",所以不相等。
（两个值相比较时，有字符串，则都转为字符串，有一个数字，则都转为数字）
49.
ele.addEventListener("click", function (e) {event.stopImmediatePropagation()});
阻止此元素的事件冒泡，并且在这条语句后绑定的相同事件不再执行。   IE9+支持。jQuery中有模拟
50.拥有frameset标签的页面，不能有body标签。。（终于找到一个没有body的页面了）
51.给对象添加数组元素，jQuery.pushStack里面方法
var a = {}; [].push.call(a, 3); a //=> {0: 3}
反过来，从对象里面取数组元素：
[].slice.apply(a, [0]);  from jQuery.fn.slice
 字符串转数组： [].slice.call("1234") => [1, 2, 3, 4]
52.获取当前焦点元素：document.activeElement

expresion:
0.控制台图形文字英文名称：figlet
js:
1.egg = !function () {
}();   //=> wrong
egg = (function () {
}()); //=> right     egg = function (){}() => right
2.Date.parse()静态方法
Date.parse("02/13/2014");
等同于new Date("02/13/2014").getTime();
3.RegExp中文字符：\u4e00-\u9fa5
4.页面高度： $(document).height
  窗口高度： $(window).height
5.滚动条高度： window.pageYOffset !== "undefined" ? window.pageYOffset : 
     (document.documentElement || document.body.parentNode || document.body).scrollTop
 在Chrome中document.documentElement反而不支持scrollTop
6.obj.send = (function () {
        var self = this;          //this point to window object ，not obj
    })();
7.Chrome Dev Tools Console Pane
    234(typeof "number") => 显示为123，字体为蓝色  
    "234"(typeof "string")   =>  也显示为234，字体为黑色
8.IE6支持Function.prototype的改写；
9.WebStorm中查找用正则的地方，多行匹配； =》 (?s)<scrIpt.+>    前面多加一个(?s)
    跟Fiddler里面的autoResponse里的match行是一样的： regex:(?insx)abcdd 
http://www.cnblogs.com/ShepherdIsland/archive/2012/05/22/Fiddler_AutoResponder_REGEX.html
10.forms["radio"].value:
Chrome下为选中的单选框的值，
但firefox下为undefined，不支持这种。可以：
$('[name=radio']:checked).val()或
form.querySelector("[name=radio]:checked")
11.jQuery的:hidden与:visible是检测元素是否占用页面空间，而不是只看是不是隐藏的。如visibility:hidden or opacity:0就是:visible为true的。
12.input.focus()是使焦点到失去时所在的位置。如果input里面原本就有值，那焦点在最前面。
13.1.用类型为数字来判断是否：
var obj = {start: 0};
if (obj.start) Error
if (typeof obj.start =="number") Right
2.[1, 3].join("").split("")  => ["1", "3"]
3.对某些对象要用到复制_.extend之类的，不然免得接下来的操作影响原数值。
4.Handlebarsjs里的对象只支持obj.start，不支持array[0]。
14.Webstorm里推送（更新）文件到Github:
先上传到VCS，再通过git,push到Github
https://www.jetbrains.com/phpstorm/webhelp/pushing-changes-to-the-upstream-(git-push).html

css:tips & ticks
1.padding-bottom遇到overflow:hidden会无效，会显示出来，但会超出父元素部分不显示。
2.class1.class2 不支持IE6
3.给定高度的时候顺手加个overfow:hidden;可以让元素不超出边界，以致于影响下面的浮动元素的浮动。
4.除了text-indent:-4000px可以隐藏文字外，line-height:100px也可以。
5.text-indent:-14px  可以用来设置段落中的第一行文本凸出。
6.firefox‘s bug: 
td:nth-child(1),如果这个表格中的第一行第一列为<td rowspan="7"></td>，那第二行的td:nth-child(1)为第二列的元素，而不是跨行的单元格。
7.IE6的filter:alphaImageLoader中的src地址是相对于HTML页面的，所以在图片中使用相对路径是有优势的。
8.IE6下，li[display:inline-block]>div[display:block]，则li[display:block]会被显示为一行
   （ li[float:none]>(div[float:left]+div[float:left])）*3，且li元素是垂直排放，则li元素竖直方向有多余间隔。
9.弹出层的mask，要全屏的话（包括页面没展示部分），则 
    position:fixed;width:100%;height:100%;left:0;right:0;
IE6下
   position:absolute; width&height实际变为document.documentElement.clientWidth&document.documentElement.clientHeight
------------------------------------
方案二： 设置html: overflow:hidden
div.mask: position:absolute; top: window.scrollTop
============================
10.图片灰色：
-webkit-filter: grayscale(1);
=====XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
1.table-layout:
fixed:固定布局算法（列宽度由第一行的宽度决定）
auto:自动算法 （列宽度由最宽的那列决定，较慢）
2.tr:nth-child(even)
  tr:nth-child(odd)
  tr:even && td:odd (wrong)
3.IE6中的高度小于10px就双倍高度的问题。line-height:0;
4.IE6-8、低版本的Chrome firefox下，undefined可以被改写，故重新定义undefined。如下
!function (undefined)();
这样也有利于undefined的代码压缩。
5.估计是JS的单线程机制，事件冒泡只能等子元素上绑定的事件运行完后再运行父元素上绑定的事件。


html:tips 
1.input:radio的checked属性在没有form包裹的情况下，是不会设为选中的。（一个或多个都不行）但是input:checkbox则不会。

php:
1.php的smart模板页面中{literal} { code here } {/literal}用于处理文本中含中｛｝的字符，因为｛｝会被PHP模板引擎解析为PHP代码。使用如下：
{literal} function func() {var reg = /\\s\\s/;} {/literal}     （TIPs: 会把正则中的"\s"当成转义字符处理，输出"s"）.
2.$vars = ["1" => 1, "2" => 2];
  $vars[3] 出错
  isset($vars[3][3]) false
  empty($vars[3][3]) false
3.关联数组json_decode之后，得用->操作符了。
$array = [ "key" => [ "innerKey" => "value"] ];
print $array["key"]["innerKey"];
$array = json_decode(json_encode( $array ));
print $array -> key -> innerKey;（用上面的[]就会报错了）。


todo:
1.原生jQuery
2.bower grunt
3.css3&html5
2.前端模块的设计与实现
3.Linux使用

todo:
2.phpstorm debugger
1.了解curl的使用
4.iframe的跨域消息传递，window.name和html5的
4.1了解Object和embed对swf文件的引入
5.jquery插件中对css的引用
6.jquery.velocity.js动画插件的研究
7.Chrome浏览器拓展程序的开发
8.用$.Callbacks完成Pubsub模块，带type类型的，如下:
    callback.bind("type", func1);
  callback.trigger("type");

1.会员卡app-core.js OO化
左右的交互用另一个Controller重写
 1.1 加状态
 1.2 改变状态

PhotoShop:
1.Ctrl+D，取消选区（任意时候）；
2.图层矢量化后方可进行其它一些操作，如调整色相/饱和度等；
3.智能对象：在需要多次对图像进行变形（包括旋转，缩放，透视等）的时候使用智能对象是再合适不过的。智能对象能保存原始信息，所以当进行了无数次的变形之后不用担心画质会有降低，因为是以原始信息作为修改而不是上一次；
4.栅格化：矢量图变像素图；
5.图层->新建基于图层的切片。（自动切片，可右键：提升为用户切片）；
